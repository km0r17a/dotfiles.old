#マウス操作を有効にする
set-option -g mouse on

# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

#utf setting
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

# increase scroll buffer size
set-option -g history-limit 2000

set-option -g buffer-limit 10

set -s escape-time 0

# 256色ターミナル
set-option -g default-terminal "screen-256color"
#set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Set the prefix to ^T.
unbind C-b
set -g prefix ^T
bind t send-prefix

unbind e
bind e new-session -c ~

# screen ^C c
unbind ^C
bind ^C new-window
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind n
bind n next-window

unbind ^P
bind ^P previous-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# copy-mode ^[
unbind ^"["
bind -r ^"[" copy-mode
unbind ^]
bind -r ^] paste-buffer

# window 0
unbind ^A
bind ^A select-window -t :=0

unbind ^e
bind ^e last-window
unbind " "
bind " " last-window

# synchronize
unbind ^Y
bind ^Y setw synchronize-panes\; display-message "synchronize-panes #{?pane_synchronized,on,off}"
unbind y
bind y setw synchronize-panes\; display-message "synchronize-panes #{?pane_synchronized,on,off}"

# prev ^H ^P p ^?
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^R r
unbind ^R
bind ^R refresh-client
unbind r
bind r refresh-client

# split -v |
unbind |
bind | split-window -h
unbind S
bind S split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t :.-
unbind BTab
bind BTab select-pane -t :.+

# unbind ^H
# bind ^H select-pane -t :.-
# unbind ^L
# bind ^L select-pane -t :.+

unbind ^H
bind ^H select-pane -L
unbind ^L
bind ^L select-pane -R
unbind ^K
bind ^K select-pane -U
unbind ^J
bind ^J select-pane -D

unbind h
bind h select-pane -L
unbind l
bind l select-pane -R
unbind k
bind k select-pane -U
unbind j
bind j select-pane -D

# " windowlist -b
unbind '"'
bind '"' choose-window

# buffer 
unbind b
bind b choose-buffer -F "#{buffer_size} bytes: #{buffer_sample}"
unbind ^B
bind ^B choose-buffer -F "#{buffer_size} bytes: #{buffer_sample}"

# ステータスラインカスタム関連
set -g status-interval 1

set -g status-left-length 60
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39

#set -g status-left '#[fg=colour222,bg=colour202]#H [S.#S] #[deafult]#[fg=colour202,bg=colour238,bold]<#[fg=colour245,bg=colour238,nobold] #(whoami) #[fg=colour238,bg=colour234,nobold]■#[deafult]'
#set -g status-left "#[fg=colour202]#(whoami)@#h#[fg=green] [#S:#I.#P] "

set -g status-left "#[fg=colour220,bg=colour124,noreverse]#(whoami)#{?client_prefix,#[reverse],}@#[noreverse]#h#[fg=green,bg=black,noreverse] [#S:#I.#P] "

#set -g window-status-format "#[fg=white,bg=colour234,nobold]#I #W #[deafult]"
#set -g window-status-current-format "#[fg=colour234,bg=colour39][#[fg=colour25,bg=colour39,noreverse,bold]#I]#W #[fg=colour39,bg=colour234,bold] #[deafult]"
#set -g window-status-current-format "#[fg=colour234,bg=colour39][#I]#W #[deafult]"
set -g window-status-format "#[fg=cyan,bg=colour17,nobold] #I #W #[default]"
set -g window-status-current-format "#[fg=colour17,bg=blue,noreverse,nobold] #I*#W #[default]"

#set -g status-right '#[fg=colour241]#H | #I:#P #[fg=colour31,bg=colour234,nobold] | #[fg=white,bg=colour234] Mem #(used-mem)%% | LAvg.[#(loadaverage)] | #[fg=colour31,bg=colour255,bold] %Y-%m-%d(%a)%H:%M#[default]'
#set -g status-right '| #[fg=white,nobold]#(echo $LANG)#[default] | #[fg=blue]up #(pc-running-time)#[default] | #[fg=magenta](#(loadaverage)) Mem #(used-mem)%%#[default] | #[fg=red,bold]%Y-%m-%d(%a)%H:%M#[default] '

#set -g status-right "#{?client_prefix,#[reverse],} #[fg=green]#(git-echo-branch-tmux-current-pane) #[fg=orange]#(git-echo-username-and-email) #[fg=cyan]%Y-%m-%d(%a) %H:%M"
#set -g status-right "#{?client_prefix,#[reverse],} #[fg=green]#(git-echo-branch-tmux-current-pane) #[fg=colour202]#(git-echo-username-and-email) < #[fg=colour31,bg=colour255,bold]%Y-%m-%d(%a) %H:%M#[default]"
#set -g status-right "#{?client_prefix,#[reverse],} #[fg=green]#(git-echo-branch-tmux-current-pane) #[fg=blue]#(git-echo-username-and-email) | #[fg=cyan,bg=colour17]%Y-%m-%d(%a) %H:%M#[default]"

set -g status-right "#[fg=green]#(git-echo-branch-tmux-current-pane) #[fg=blue]#(git-echo-username-and-email) #{?client_prefix,#[reverse],}#[fg=blue,bg=colour17]%Y-%m-%d(%a) %H:%M#[default]"

#set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour236,nobold]?#(powerline-client tmux left)'
#set -g status-right '#(powerline-client tmux right)'

# reload config
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#+# set-option -g default-command "reattach-to-user-namespace -l bash"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

