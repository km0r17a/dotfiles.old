
_powerline_tmux_setenv() {
  if [[ -n "$TMUX" ]]; then
    tmux setenv TMUX_"$1"_$(tmux display -p "#D" | tr -d %) "$2"
  fi
}
 
_powerline_tmux_set_pwd() {
  _powerline_tmux_setenv PWD "$PWD"
}
 
_powerline_tmux_set_columns() {
  _powerline_tmux_setenv COLUMNS "$COLUMNS"
}
 
_powerline_prompt() {
  [[ -z "$POWERLINE_OLD_PROMPT_COMMAND" ]] ||
    eval $POWERLINE_OLD_PROMPT_COMMAND
#  PS1="$(powerline-client.py shell left -r bash_prompt --last_exit_code=$?)"
  PS1="$(powerline-client shell left -r bash_prompt --last_exit_code=$?)"
  _powerline_tmux_set_pwd
}
 
trap "_powerline_tmux_set_columns" SIGWINCH
_powerline_tmux_set_columns
 
#[[ "$PROMPT_COMMAND" == "_powerline_prompt" ]] || POWERLINE_OLD_PROMPT_COMMAND="$PROMPT_COMMAND"
#export PROMPT_COMMAND="_powerlineÂ¥_prompt"

# If not running interactively, don't do anything
test -z "$PS1" && return

# Make bash check it's window size after a process completes
shopt -s checkwinsize

PS1="[\u@\h \W]\$ "
export PS1

test -x /opt/local/bin/lv && alias less=/opt/local/bin/lv

#PATH=/usr/local/mysql/bin:$PATH
export PATH
export JAVA_HOME=/Library/Java/Home

#+#. ~/.bashalias
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
#alias ls='ls -FG'
alias ls='ls -F'
alias la='ls -a'
alias ll='ls -la'
alias vim="reattach-to-user-namespace vim"
alias tm='tmux'
alias sadd='ssh-add ~/.ssh/id_rsa'
alias sadl='ssh-add -l'

stty -ixon

export CLICOLOR=1
#export LSCOLORS=gxfxcxdxbxegedabagacad
export LSCOLORS=gxfxcxdxcxegedabagacad

#export ORACLE_BASE=/Users/oracle
#export ORACLE_HOME=/Users/oracle/oracle/product/10.2.0/db_1
#export DYLD_LIBRARY_PATH=$ORACLE_HOME/lib
#export ORACLE_SID=ORCL
#PATH=$JAVA_HOME/bin:$PATH:$ORACLE_HOME/bin
#export NLS_LANG=Japanese_Japan.AL32UTF8


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
